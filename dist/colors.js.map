{"version":3,"file":"colors.js","sourceRoot":"/","sources":["colors.ts"],"names":[],"mappings":";;;;;;AAAA,wEAAwC;AAExC,mDAA+C;AAC/C,uCAAwC;AAGxC,MAAa,eAAgB,SAAQ,6BAAa;IAC1B;IAAtB,YAAsB,MAAc;QAClC,KAAK,EAAE,CAAA;QADa,WAAM,GAAN,MAAM,CAAQ;QAElC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAA;QAClC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;YACzB,IAAI,QAAQ,GAAG,EAAE,CAAA;YACjB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,KAAK,QAAQ;gBAC3C,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;YAEjD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;gBAC3C,QAAQ,GAAG,0BAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,sBAAY,CAAC,UAAU,CAAC,CAAC,CAAA;YAChE,CAAC,CAAC,CAAA;YAEF,MAAM,GAAG,0BAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;SAC3C;QACD,OAAO,MAAM,CAAC,OAAO,CAAA;QAErB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3C,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,QAAQ,EAAE;gBACzC,IAAI,CAAC,QAAQ,IAAI,cAAc,SAAS,OAAO,CAAA;gBAC/C,IAAI,CAAC,QAAQ,IAAI,WAAW,CAAA;gBAC5B,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,uBAAuB,CAC3C,SAAS,EACT,MAAM,CAAC,SAAS,CAAC,CAClB,CAAA;gBACD,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAA;gBAExB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,wBAAwB,CAC5C,SAAS,EACT,MAAM,CAAC,SAAS,CAAC,CAClB,CAAA;gBACD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAA;gBACrB,SAAQ;aACT;YACD,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE;gBACzD,MAAM,QAAQ,GAAG,SAAS,GAAG,GAAG,GAAG,YAAY,CAAA;gBAC/C,IAAI,CAAC,QAAQ,IAAI,cAAc,SAAS,IAAI,CAAA;gBAC5C,IAAI,CAAC,QAAQ,IAAI,WAAW,CAAA;gBAC5B,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,uBAAuB,CAC3C,QAAQ,EACR,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAChC,CAAA;gBACD,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAA;gBAExB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,wBAAwB,CAC5C,QAAQ,EACR,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAChC,CAAA;gBACD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAA;aACtB;SACF;QAED,IAAI,CAAC,cAAc,EAAE,CAAA;IACvB,CAAC;IAED,uBAAuB,CAAC,IAAI,EAAE,KAAK;QACjC,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK,CAAA;IACjC,CAAC;IAED,wBAAwB,CAAC,IAAI,EAAE,KAAK;QAClC,IAAI,CAAC,GAAG,EAAE,CAAA;QACV,CAAC,IAAI,QAAQ,IAAI,YAAY,KAAK,KAAK,CAAA;QACvC,CAAC,IAAI,OAAO,IAAI,uBAAuB,KAAK,KAAK,CAAA;QACjD,OAAO,CAAC,CAAA;IACV,CAAC;CACF;AAjED,0CAiEC","sourcesContent":["import deepMerge from 'lodash-deepmerge'\n\nimport { BaseProcessor } from './baseProcessor'\nimport { colorPresets } from './presets'\nimport { Schema } from './types'\n\nexport class ColorsProcessor extends BaseProcessor {\n  constructor(protected schema: Schema) {\n    super()\n    let colors = schema.colors.palette\n    if (schema.colors._extend) {\n      let extended = {}\n      if (typeof schema.colors._extend === 'string')\n        schema.colors._extend = [schema.colors._extend]\n\n      schema.colors._extend.forEach((presetName) => {\n        extended = deepMerge.merge(extended, colorPresets[presetName])\n      })\n\n      colors = deepMerge.merge(extended, colors)\n    }\n    delete colors._extend\n\n    for (const colorName of Object.keys(colors)) {\n      if (typeof colors[colorName] === 'string') {\n        this._content += `/* Color - ${colorName} */\\n`\n        this._content += ':root {\\n'\n        this._content += this.generateSingleColorVars(\n          colorName,\n          colors[colorName],\n        )\n        this._content += '}\\n\\n'\n\n        this._content += this.generateSingleColorRules(\n          colorName,\n          colors[colorName],\n        )\n        this._content += '\\n'\n        continue\n      }\n      for (const colorSubname of Object.keys(colors[colorName])) {\n        const fullName = colorName + '-' + colorSubname\n        this._content += `// Color - ${colorName}\\n`\n        this._content += ':root {\\n'\n        this._content += this.generateSingleColorVars(\n          fullName,\n          colors[colorName][colorSubname],\n        )\n        this._content += '}\\n\\n'\n\n        this._content += this.generateSingleColorRules(\n          fullName,\n          colors[colorName][colorSubname],\n        )\n        this._content += '\\n'\n      }\n    }\n\n    this.formatDocument()\n  }\n\n  generateSingleColorVars(name, value) {\n    return `--${name}: ${value};\\n`\n  }\n\n  generateSingleColorRules(name, value) {\n    let s = ''\n    s += `.clr-${name} {color: ${value}}\\n`\n    s += `.bg-${name} {background-color: ${value}}\\n`\n    return s\n  }\n}\n"]}