{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wDAAyB;AACzB,2CAA4B;AAE5B,qCAA0C;AAC1C,uCAA4C;AAC5C,yCAA8C;AAG9C,MAAM,UAAU,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAA;AAE9D,KAAK,UAAU,IAAI;IACjB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAA;IAC1B,IAAI,MAAc,CAAA;IAClB,IAAI,kBAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,EAAE;QACtD,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,CAAA;KACtD;SAAM,IAAI,kBAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,EAAE;QAC7D,MAAM,GAAG,MAAM,UAAU,CAAC,IAAI,EAAE,kBAAkB,EAAE,mBAAmB,CAAC,CAAA;KACzE;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAA;KACpC;IACD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAA;IAE1C,MAAM,kBAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IAE1B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAA;IACrC,MAAM,iBAAiB,GAAG,IAAI,4BAAiB,CAAC,MAAM,CAAC,CAAA;IACvD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;IACnC,MAAM,eAAe,GAAG,IAAI,wBAAe,CAAC,MAAM,CAAC,CAAA;IACnD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAA;IACpC,MAAM,gBAAgB,GAAG,IAAI,0BAAgB,CAAC,MAAM,CAAC,CAAA;IACrD,OAAO,CAAC,GAAG,EAAE,CAAA;IAEb,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;IACjC,MAAM,kBAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,OAAO,CAAC,CAAA;IAC5E,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAA;IAClC,MAAM,kBAAE,CAAC,SAAS,CAChB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,EACjC,iBAAiB,CAAC,OAAO,CAC1B,CAAA;IACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;IAChC,MAAM,kBAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,CAAA;IAC5E,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;AACtB,CAAC;AAED,IAAI,EAAE,CAAA;AAEN,0CAAuB","sourcesContent":["#!/usr/bin/env node\nimport fs from 'fs-extra'\nimport * as path from 'path'\n\nimport { ColorsProcessor } from './colors'\nimport { ImportsProcessor } from './imports'\nimport { SpacingsProcessor } from './spacings'\nimport { Schema } from './types'\n\nconst coolImport = require('@nikifilini/maiden-config-loader')\n\nasync function main() {\n  const root = process.cwd()\n  let schema: Schema\n  if (fs.existsSync(path.join(root, 'schema.maiden.js'))) {\n    schema = require(path.join(root, 'schema.maiden.js'))\n  } else if (fs.existsSync(path.join(root, 'schema.maiden.ts'))) {\n    schema = await coolImport(root, 'schema.maiden.ts', 'schema.maiden.mjs')\n  } else {\n    throw new Error('Config not found')\n  }\n  const outDir = path.join(root, schema.out)\n\n  await fs.ensureDir(outDir)\n\n  console.log('Generating spacings...')\n  const spacingsGenerator = new SpacingsProcessor(schema)\n  console.log('Generating colors...')\n  const colorsGenerator = new ColorsProcessor(schema)\n  console.log('Generating imports...')\n  const importsGenerator = new ImportsProcessor(schema)\n  console.log()\n\n  console.log('Writing imports...')\n  await fs.writeFile(path.join(outDir, 'index.css'), importsGenerator.content)\n  console.log('Writing spacings...')\n  await fs.writeFile(\n    path.join(outDir, 'spacings.css'),\n    spacingsGenerator.content,\n  )\n  console.log('Writing colors...')\n  await fs.writeFile(path.join(outDir, 'colors.css'), colorsGenerator.content)\n  console.log('Done!')\n}\n\nmain()\n\nexport * from './utils'\n"]}