{"version":3,"file":"spacings.js","sourceRoot":"/","sources":["spacings.ts"],"names":[],"mappings":";;;AAAA,mDAA+C;AAG/C,MAAa,iBAAkB,SAAQ,6BAAa;IAG9B;IAFpB,OAAO,CAAmC;IAE1C,YAAoB,MAAc;QAChC,KAAK,EAAE,CAAA;QADW,WAAM,GAAN,MAAM,CAAQ;QAGhC,MAAM,QAAQ,GACZ,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAA;QACvE,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;QAEzC,IAAI,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,CAAA;QAErD,IAAI,YAAY,GAAG,EAAE,CAAA;QAErB,KAAK,MAAM,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAC3D,IAAI,WAAW,KAAK,SAAS;gBAAE,SAAQ;YAEvC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;YACjD,IAAI,CAAC,GAAG,sBAAsB,WAAW,IAAI,CAAA;YAE7C,MAAM,KAAK,GAAG,CAAC,CAAA;YACf,IAAI,GAAW,CAAA;YACf,IAAI;gBACF,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;aAC5B;YAAC,MAAM;gBACN,GAAG,GAAG,UAAU,CAAA;aACjB;YAED,CAAC,IAAI,WAAW,CAAA;YAChB,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;YAC/D,CAAC,IAAI,OAAO,CAAA;YACZ,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;YAEhE,YAAY,IAAI,CAAC,CAAA;SAClB;QAED,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAA;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAA;IACvB,CAAC;IAED,oBAAoB,CAClB,IAAY,EACZ,OAAgB,EAChB,KAAa,EACb,GAAW;QAEX,IAAI,CAAC,GAAG,EAAE,CAAA;QACV,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAA;QACnC,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;YACtB,IAAI,CAAC,KAAK;gBAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;YAC3C,IAAI,CAAC,KAAK;gBAAE,SAAQ;YAEpB,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,MAAM,CAAA;YAC5C,IAAI,OAAO,CAAC,EAAE,EAAE;gBACd,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC;UAClB,IAAI,UAAU,KAAK;UACnB,IAAI,WAAW,KAAK;UACpB,CAAA;gBACF,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC;UAClB,IAAI,SAAS,KAAK;UAClB,IAAI,YAAY,KAAK;UACrB,CAAA;gBACF,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,IAAI,SAAS,KAAK,OAAO,CAAA;gBAClD,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,MAAM,IAAI,YAAY,KAAK,OAAO,CAAA;gBACtD,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,MAAM,IAAI,UAAU,KAAK,OAAO,CAAA;gBACpD,CAAC,IAAI,IAAI,KAAK,KAAK,CAAC,MAAM,IAAI,WAAW,KAAK,OAAO,CAAA;aACtD;YACD,CAAC,IAAI,IAAI,CAAA;SACV;QACD,OAAO,CAAC,CAAA;IACV,CAAC;IAED,mBAAmB,CACjB,IAAY,EACZ,OAAgB,EAChB,KAAa,EACb,GAAW;QAEX,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAA;QACnC,IAAI,CAAC,GAAG,EAAE,CAAA;QACV,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;YACtB,IAAI,CAAC,KAAK;gBAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;YAC3C,IAAI,CAAC,KAAK;gBAAE,SAAQ;YAEpB,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAA;YAClC,IAAI,KAAK,KAAK,IAAI;gBAAE,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,OAAO,CAAA;SAC1D;QACD,OAAO,CAAC,CAAA;IACV,CAAC;IAED,OAAO,CAAC,OAAgB,EAAE,KAAK,GAAG,CAAC;QACjC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACnD,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;YACzB,IAAI,KAAK,CAAC,GAAG,CAAC;gBAAE,OAAO,GAAG,CAAA;YAC1B,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAA;QAC9B,CAAC,EAAE,CAAC,CAAC,CAAA;QACL,IAAI,CAAC,GAAG;YAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAA;QAC5C,OAAO,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAA;IAClC,CAAC;CACF;AArGD,8CAqGC","sourcesContent":["import { BaseProcessor } from './baseProcessor'\nimport { Schema, Spacing } from './types'\n\nexport class SpacingsProcessor extends BaseProcessor {\n  default: { spacing: Spacing; end: number }\n\n  constructor(private schema: Schema) {\n    super()\n\n    const defaults: Spacing =\n      'default' in this.schema.spacings ? this.schema.spacings.default : {}\n    const defaultEnd = this.findEnd(defaults)\n\n    this.default = { spacing: defaults, end: defaultEnd }\n\n    let spacingsFile = ''\n\n    for (const spacingName of Object.keys(this.schema.spacings)) {\n      if (spacingName === 'default') continue\n\n      const spacing = this.schema.spacings[spacingName]\n      let s = `\\n\\n\\n// Spacing - ${spacingName}\\n`\n\n      const start = 1\n      let end: number\n      try {\n        end = this.findEnd(spacing)\n      } catch {\n        end = defaultEnd\n      }\n\n      s += ':root {\\n'\n      s += this.generateSpacingVars(spacingName, spacing, start, end)\n      s += '}\\n\\n'\n      s += this.generateSpacingRules(spacingName, spacing, start, end)\n\n      spacingsFile += s\n    }\n\n    this._content = spacingsFile\n    this.formatDocument()\n  }\n\n  generateSpacingRules(\n    name: string,\n    spacing: Spacing,\n    start: number,\n    end: number,\n  ) {\n    let s = ''\n    const short = spacing.short ?? name\n    for (let i = start; i <= end; i++) {\n      let value = spacing[i]\n      if (!value) value = this.default.spacing[i]\n      if (!value) continue\n\n      s += `.${short}-${i} {${name}: ${value};}\\n`\n      if (spacing.xy) {\n        s += `.${short}x-${i} {\n        ${name}-left: ${value};\n        ${name}-right: ${value};\n      }\\n`\n        s += `.${short}y-${i} {\n        ${name}-top: ${value};\n        ${name}-bottom: ${value};\n      }\\n`\n        s += `.${short}t-${i} {${name}-top: ${value}; }\\n`\n        s += `.${short}b-${i} { ${name}-bottom: ${value}; }\\n`\n        s += `.${short}l-${i} { ${name}-left: ${value}; }\\n`\n        s += `.${short}r-${i} { ${name}-right: ${value}; }\\n`\n      }\n      s += '\\n'\n    }\n    return s\n  }\n\n  generateSpacingVars(\n    name: string,\n    spacing: Spacing,\n    start: number,\n    end: number,\n  ) {\n    const short = spacing.short ?? name\n    let s = ''\n    for (let i = start; i <= end; i++) {\n      let value = spacing[i]\n      if (!value) value = this.default.spacing[i]\n      if (!value) continue\n\n      s += `--${name}-${i}: ${value};\\n`\n      if (short !== name) s += `--${short}-${i}: ${value};\\n\\n`\n    }\n    return s\n  }\n\n  findEnd(spacing: Spacing, start = 1) {\n    const end = Object.keys(spacing).reduce((acc, key) => {\n      const num = parseInt(key)\n      if (isNaN(num)) return acc\n      return num > acc ? num : acc\n    }, 0)\n    if (!end) throw new Error('No numeric keys')\n    return end > start ? end : start\n  }\n}\n"]}